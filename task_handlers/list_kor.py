import logging
import win32print
import win32api
import os
from docx import Document
from conn.conn import bot
from conn.conn import get_db_connection
from task_handlers.delete_pair import delete_expired_message_pairs
from task_handlers.delete_pair import delete_all_message_pairs
from task_handlers.delete_pair import save_message_pair
from task_handlers.menu import main_menu
from telebot import types


logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")


TASKS_DOCX_PATH = "tasks.docx"

TEMPLATE_DOCX_PATH = "templates.docx"

def create_default_template():
    """–°–æ–∑–¥–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —à–∞–±–ª–æ–Ω, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç."""
    doc = Document()
    doc.add_heading('–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø–æ–¥—Ä—è–¥—á–∏–∫–∞', 0)

    
    table = doc.add_table(rows=1, cols=5)
    table.style = 'Table Grid'

    
    hdr_cells = table.rows[0].cells
    hdr_cells[0].text = '–ù–æ–º–µ—Ä –∑–∞–¥–∞—á–∏'
    hdr_cells[1].text = '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏'
    hdr_cells[2].text = '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ'
    hdr_cells[3].text = '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'
    hdr_cells[4].text = '–û—Ç—á–µ—Ç –æ —Ä–∞–±–æ—Ç–µ –ø–æ–¥—Ä—è–¥—á–∏–∫–∞'

    #
    doc.save(TEMPLATE_DOCX_PATH)

@bot.message_handler(func=lambda message: message.text == "üìë–ö–æ—Ä–æ–ª–µ–≤")
def contractor_task_list_handler(message):
    delete_expired_message_pairs(message.chat.id)
    delete_all_message_pairs(message.chat.id)
    save_message_pair(message.chat.id, user_message_id=message.message_id)

    sent_message = bot.send_message(message.chat.id, "–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á –ø–æ–¥—Ä—è–¥—á–∏–∫–∞...")
    save_message_pair(message.chat.id, bot_message_id=sent_message.message_id)

    try:
        with get_db_connection() as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT id, task_name, location, comment FROM contractor_tasks")
            tasks = cursor.fetchall()

            if tasks:
                
                task_list_message = "üìë –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø–æ–¥—Ä—è–¥—á–∏–∫–∞:\n\n"
                for task in tasks:
                    task_id, task_name, location, comment = task
                    task_list_message += (
                        f"üü° –ù–æ–º–µ—Ä –∑–∞–¥–∞—á–∏: {task_id}\n"
                        f"   –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: {task_name}\n"
                        f"   –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {location}\n"
                        f"   –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}\n\n"
                    )

                
                sent_message = bot.send_message(message.chat.id, task_list_message)
                save_message_pair(message.chat.id, bot_message_id=sent_message.message_id)

                # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω
                if not os.path.exists(TEMPLATE_DOCX_PATH):
                    create_default_template()
                    logging.info("–°–æ–∑–¥–∞–Ω —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —à–∞–±–ª–æ–Ω.")

                
                doc = Document(TEMPLATE_DOCX_PATH)

                
                table = None
                for tbl in doc.tables:
                    if len(tbl.columns) == 5:  
                        table = tbl
                        break

                
                if not table:
                    table = doc.add_table(rows=1, cols=5)
                    table.style = 'Table Grid'
                    hdr_cells = table.rows[0].cells
                    hdr_cells[0].text = '–ù–æ–º–µ—Ä –∑–∞–¥–∞—á–∏'
                    hdr_cells[1].text = '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏'
                    hdr_cells[2].text = '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ'
                    hdr_cells[3].text = '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'
                    hdr_cells[4].text = '–û—Ç—á–µ—Ç –æ —Ä–∞–±–æ—Ç–µ –ø–æ–¥—Ä—è–¥—á–∏–∫–∞'

                
                for task in tasks:
                    task_id, task_name, location, comment = task
                    row_cells = table.add_row().cells
                    row_cells[0].text = str(task_id)
                    row_cells[1].text = task_name
                    row_cells[2].text = location
                    row_cells[3].text = comment
                    row_cells[4].text = ""  

                
                doc.save(TASKS_DOCX_PATH)

                
                sent_message = bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ Word-–¥–æ–∫—É–º–µ–Ω—Ç.")
                save_message_pair(message.chat.id, bot_message_id=sent_message.message_id)

                
                sent_message = bot.send_message(
                    message.chat.id,
                    "–î–ª—è –ø–µ—á–∞—Ç–∏ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á –ø–æ–¥—Ä—è–¥—á–∏–∫–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /print"
                )
                save_message_pair(message.chat.id, bot_message_id=sent_message.message_id)
            else:
                sent_message = bot.send_message(message.chat.id, "‚ùå –ó–∞–¥–∞—á –¥–ª—è –ø–æ–¥—Ä—è–¥—á–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
                save_message_pair(message.chat.id, bot_message_id=sent_message.message_id)
                main_menu(message)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á –ø–æ–¥—Ä—è–¥—á–∏–∫–∞: {str(e)}", exc_info=True)
        sent_message = bot.send_message(message.chat.id, "üö´ –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–¥–∞—á–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        save_message_pair(message.chat.id, bot_message_id=sent_message.message_id)

@bot.message_handler(commands=['print'])
def print_tasks_handler(message):
    try:
        
        if not os.path.exists(TASKS_DOCX_PATH):
            bot.send_message(message.chat.id, "‚ùå –§–∞–π–ª —Å –∑–∞–¥–∞—á–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∑–∞–¥–∞—á–∏.")
            return

        
        printer_name = win32print.GetDefaultPrinter()
        win32api.ShellExecute(0, "print", TASKS_DOCX_PATH, f'"{printer_name}"', ".", 0)

        bot.send_message(message.chat.id, "üñ®Ô∏è –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø–µ—á–∞—Ç—å.")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—á–∞—Ç–∏ –∑–∞–¥–∞—á: {str(e)}", exc_info=True)
        bot.send_message(message.chat.id, "üö´ –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–¥–∞—á–∏ –Ω–∞ –ø–µ—á–∞—Ç—å.")

def main_menu_markup():
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("‚ûï –î–æ–±–∞–≤–∏—Ç—å", "üìã –°–ø–∏—Å–∫–∏", "‚öôÔ∏è –°–µ—Ä–≤–∏—Å")
    return markup

if __name__ == "__main__":
    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    bot.polling(none_stop=True, timeout=30)
